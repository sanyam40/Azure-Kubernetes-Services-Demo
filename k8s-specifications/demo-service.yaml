# Service is used on the top of deployment to provide load balancing and
# use kube-proxy to route the request to the pod.
# Service discovery is done by the label and selector.
# It allows exposing the deployment to the outside world.
# 1. Cluster IP: Expose the service on a cluster-internal IP.
# 2. NodePort: Expose the service on each Node’s IP at a static port.
# 3. LoadBalancer: Expose the service externally using a cloud provider’s load balancer.

apiVersion: v1
kind: Service
metadata:
  name: demo-aks  # Name of the service
  labels:
    app: demo-aks  # Labels to identify the service
spec:
  # loadBalancerIP: 4.188.94.132
  type: LoadBalancer  # Type of the service (NodePort, ClusterIP, LoadBalancer)
  ports:
    - name: "demo-aks-service"  # Name of the port
      port: 80  # Port that the service exposes
      targetPort: 3000  # Port on the pod to which traffic should be forwarded
      # nodePort: 31001  # Static port on each node's IP
  selector:
    app: demo-aks  # Selector to match the pods with the label 'app: demo'